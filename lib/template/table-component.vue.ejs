<template>
    <div>
      <Query
        size="mini"
        labelWidth="100px"
        :itemWidth="8"
        :searchData="searchData"
        :searchForm="searchForm"
        :searchHandle="searchHandle"
      />
      <el-main class="table-main" v-if="columns.length > 0">
        <r-table
          ref="myTable"
          :uniqueID="'urid'"
          :tableData="tableData"
          :columns="columns"
          :current="searchData.pageNum"
          :pageSize="searchData.pageSize"
          :total="total"
          :multiSelect="true"
          :isHandle="true"
          :tableHandles="tableHandles"
          @on-select-all="onSelectAll"
          @on-select="select"
          @on-selection-change="selectChange"
          @on-row-dblclick="rowDblclick"
          @on-change="pageChange"
          @on-page-size-change="pageSizeChange"
        ></r-table>
      </el-main>
    </div>
  </template>
  <script>
  export default {
    name: "<%= data.name %>",
    data() {
      return {
        searchForm: [
          {
            type: "Input",
            label: "填写字段",
            prop: "name",//字段名
            placeholder: "请输入"
          },
        ],
        searchHandle: [
          {
            label: "查询",
            type: "primary",
            handle: () => {
              this.getTableData();
            }
          }
        ],
        tableData: [],
        tableHandles: [
          {
            label: "新增",
            type: "primary",
            size: "small",
            page: "pageName",
            btn: "Add",
            handle: () => {
              //todo
            }
          }      
       ],
        total: 0,
        columns: [],
        selection: [],
        searchData: {
          pageNum: 1,
          pageSize: 50,
          name: "",
        } //search data
      };
    },
    created() {
      this.getColumns();
    },
    activated() {
      this.getTableData();
    },
    methods: {
      getColumns: function() {
        //todo,列表表头配置请求
      },
      getTableData: function(page) {
        //page,当前所在页，默认第一页，page=1
        this.searchData.pageNum = page ? page : 1;
        //todo,获取列表数据
      },
      // Triggered when the number of pages changes
      pageChange(page) {
        this.getTableData(page);
      },
      // Triggered when the number of display bars per page of the table changes
      pageSizeChange(pageSize) {
        if (this.searchData.pageSize !== pageSize) {
          this.searchData.pageSize = pageSize;
          this.searchData.pageNum = 1;
          this.getTableData();
        }
      },
      rowDblclick: function(row) {
        //todo,双击事件
      },
      select: function(selection) {
        this.selection = selection;
      },
      selectChange: function(selection) {
        this.selection = selection;
      },
      onSelectAll: function(selection) {
        this.selection = selection;
      }
    }
  };
  </script>
  <style scoped>
  .ces-search {
    overflow: hidden;
  }
  </style>
  