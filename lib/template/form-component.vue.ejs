<template>
    <div class="add-content">
        <el-breadcrumb separator-class="el-icon-arrow-right">
          <el-breadcrumb-item
            >模块名</el-breadcrumb-item
          >
          <el-breadcrumb-item>所在页面</el-breadcrumb-item>
        </el-breadcrumb>
        <div class="handle">
          <el-button
            type="primary"
            v-show="isEdit !== 'look'"
            size="small"
            @click="saveUserInfo"
            >保存</el-button
          >
          <el-button type="primary" size="small" @click="cancelSave">
              取消
           </el-button>
        </div>
        <div class="content">
          <h2>填写信息<span class="sub-title">提示字段内容</span></h2>
          <Query
            size="mini"
            labelWidth="200px"
            ref="user"
            :itemWidth="12"
            :searchData="searchData"
            :searchForm="userForm"
            :rules="userRules"
            :list="list"
          />
        </div>
    </div>
  </template>
  
  <script>
  export default {
    name: "<%= data.name %>",
    data() {
      return {
        searchData: {
          relateOrgType: "",
          orgName: "",
          userName: "",
          mobile: "",
          userStatus: ""
        },
        userRules: {
          relateOrgType: [
            { required: true, message: "机构类型是必填项", trigger: "change" }
          ],
          orgName: [
            {
              required: true,
              message: "机构名称是必填项",
              trigger: "change"
            }
          ],
          mobile: [
            { required: true, message: "用户账户是必填项", trigger: "blur" },
            {
              pattern: /^\w{1,32}$/,
              message: "用户账户可以由字母+数字组成，最大32位",
              trigger: "blur"
            }
          ],
          userName: [
            {
              required: true,
              message: "用户名称是必填项",
              trigger: "blur"
            }
          ],
          userStatus: [
            { required: true, message: "用户状态是必填项", trigger: "change" }
          ]
        },
        userForm: [
          {
            type: "Select",
            label: "机构类型",
            prop: "relateOrgType",
            multiple: false,
            change: value => {
              this.searchData.relateOrgType = value;
              this.searchData.orgName = "";
              this.$api.user
                .getOrgConfigList({ relateOrgType: value })
                .then(res => {
                  this.list.orgNameList = res.data;
                });
            },
            long: true,
            placeholder: "请选择",
            disable: this.$route.query.state !== "add"
          },
          {
            type: "Select",
            label: "机构名称",
            prop: "orgName",
            multiple: false,
            change: value => {
              this.searchData.orgName = value;
            },
            long: true,
            placeholder: "请选择",
            disable: () => {
              return (
                this.$route.query.state !== "add" ||
                this.searchData.relateOrgType === ""
              );
            }
          },
          {
            type: "Input",
            label: "用户名称",
            prop: "userName",
            placeholder: "请输入"
          },
          {
            type: "Input",
            label: "用户账号",
            prop: "mobile",
            placeholder: "请输入"
          },
          {
            type: "Select",
            label: "用户状态",
            prop: "userStatus",
            change: value => {
              this.searchData.userStatus = value;
            },
            placeholder: "请选择"
          }
        ],
        list: {
          relateOrgTypeList: [],
          userStatusList: [],
          orgNameList: []
        },
        defaultProps: {
          children: "children",
          label: "label"
        },
        isEdit: this.$route.query.state
      };
    },
    created() {
      
    },
    mounted() {
     
    },
    methods: {
      saveUserInfo: function() {
        let that = this;
        this.$refs.user.$children[0].validate(valid => {
          if (valid) {
            //todo,后端请求接口
          } else {
            this.$message.warning("还有字段未正确填写，请检查！");
          }
        });
      },
      //取消/关闭
      cancelSave: function() {
        this.$confirm("是否确认取消？", "请确认", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "info"
        })
          .then(() => {
           //todo
          })
          .catch(() => {});
      }
    }
  };
  </script>
  <style lang="less" scoped>
  .el-breadcrumb {
    float: left;
  }
  </style>
  